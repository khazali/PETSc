# -*- mode: makefile -*-
#
#  testexamples_X - Runs various PETSc test suites

#    6 - C examples that don't work with complex numbers, require PETSc matrices
#    8 - Fortran .F examples that don't work with complex numbers
#   13 - Examples that should only be compiled.

testexamples_C: ${TESTEXAMPLES_C}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_C}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_C}\n"; fi
testexamples_PFLOTRAN: ${TESTEXAMPLES_PFLOTRAN}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_PFLOTRAN}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_PFLOTRAN}\n"; fi
testexamples_ALQUIMIA: ${TESTEXAMPLES_ALQUIMIA}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_ALQUIMIA}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_ALQUIMIA}\n"; fi
testexamples_C_Python: ${TESTEXAMPLES_C_PYTHON}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_C_PYTHON}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_C_PYTHON}\n"; fi
testexamples_C_Info: ${TESTEXAMPLES_C_INFO}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_C_INFO}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_C_INFO}\n"; fi
testexamples_C_NotSingle: ${TESTEXAMPLES_C_NOTSINGLE}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_C_NOTSINGLE}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_C_NOTSINGLE}\n"; fi
testexamples_Cxx: ${TESTEXAMPLES_CXX}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_CXX}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_CXX}\n"; fi
testexamples_C_X: ${TESTEXAMPLES_C_X}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_C_X}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_C_X}\n"; fi
testexamples_Fortran: ${TESTEXAMPLES_FORTRAN}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_FORTRAN}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_FORTRAN}\n"; fi
testexamples_Fortran_NotSingle: ${TESTEXAMPLES_FORTRAN_NOTSINGLE}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_FORTRAN_NOTSINGLE}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_FORTRAN_NOTSINGLE}\n"; fi
testexamples_C_X_MPIUni: ${TESTEXAMPLES_C_X_MPIUNI}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_C_X_MPIUNI}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_C_X_MPIUNI}\n"; fi
testexamples_C_Complex: ${TESTEXAMPLES_C_COMPLEX}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_C_COMPLEX}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_C_COMPLEX}\n"; fi
testexamples_C_NoComplex: ${TESTEXAMPLES_C_NOCOMPLEX}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_C_NOCOMPLEX}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_C_NOCOMPLEX}\n"; fi
testexamples_C_NoComplex_NotSingle: ${TESTEXAMPLES_C_NOCOMPLEX_NOTSINGLE}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_C_NOCOMPLEX_NOTSINGLE}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_C_NOCOMPLEX_NOTSINGLE}\n"; fi
testexamples_DATAFILESPATH: ${TESTEXAMPLES_DATAFILESPATH}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_DATAFILESPATH}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_DATAFILESPATH}\n"; fi
testexamples_Fortran_DATAFILESPATH: ${TESTEXAMPLES_FORTRAN_DATAFILESPATH}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_FORTRAN_DATAFILESPATH}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_FORTRAN_DATAFILESPATH}\n"; fi
testexamples_Cxx_DATAFILESPATH: ${TESTEXAMPLES_CXX_DATAFILESPATH}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_CXX_DATAFILESPATH}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_CXX_DATAFILESPATH}\n"; fi
testexamples_DOUBLEINT32: ${TESTEXAMPLES_DOUBLEINT32}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_DOUBLEINT32}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_DOUBLEINT32}\n"; fi
testexamples_Fortran_DOUBLEINT32: ${TESTEXAMPLES_FORTRAN_DOUBLEINT32}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_FORTRAN_DOUBLEINT32}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_FORTRAN_DOUBLEINT32}\n"; fi
testexamples_F90_DataTypes: ${TESTEXAMPLES_F90_DATATYPES}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_F90_DATATYPES}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_F90_DATATYPES}\n"; fi
testexamples_Fortran_NoComplex: ${TESTEXAMPLES_FORTRAN_NOCOMPLEX}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_FORTRAN_NOCOMPLEX}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_FORTRAN_NOCOMPLEX}\n"; fi
testexamples_Fortran_NoComplex_NotSingle: ${TESTEXAMPLES_FORTRAN_NOCOMPLEX_NOTSINGLE}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_FORTRAN_NOCOMPLEX_NOTSINGLE}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_FORTRAN_NOCOMPLEX_NOTSINGLE}\n"; fi
testexamples_Fortran_MPIUni: ${TESTEXAMPLES_FORTRAN_MPIUNI}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_FORTRAN_MPIUNI}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_FORTRAN_MPIUNI}\n"; fi
testexamples_Fortran_Complex: ${TESTEXAMPLES_FORTRAN_COMPLEX}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_FORTRAN_COMPLEX}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_FORTRAN_COMPLEX}\n"; fi
testexamples_C_Complex_MPIUni: ${TESTEXAMPLES_C_CCOMPLEX_MPIUNI}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_C_CCOMPLEX_MPIUNI}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_C_CCOMPLEX_MPIUNI}\n"; fi
testexamples_F90: ${TESTEXAMPLES_F90}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_F90}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_F90}\n"; fi
testexamples_F90_Threadsafety: ${TESTEXAMPLES_F90_THREADSAFETY}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_F90_THREADSAFETY}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_F90_THREADSAFETY}\n"; fi
testexamples_F90_NotSingle: ${TESTEXAMPLES_F90_NOTSINGLE}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_F90_NOTSINGLE}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_F90_NOTSINGLE}\n"; fi
testexamples_F90_Complex: ${TESTEXAMPLES_F90_COMPLEX}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_F90_COMPLEX}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_F90_COMPLEX}\n"; fi
testexamples_F90_NoComplex: ${TESTEXAMPLES_F90_NOCOMPLEX}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_F90_NOCOMPLEX}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_F90_NOCOMPLEX}\n"; fi
testexamples_F2003: ${TESTEXAMPLES_F2003}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_F2003}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_F2003}\n"; fi
testexamples_13: ${TESTEXAMPLES_13}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_13}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_13}\n"; fi
testexamples_17: ${TESTEXAMPLES_17}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_17}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_17}\n"; fi
testexamples_18: ${TESTEXAMPLES_18}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_18}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_18}\n"; fi
testexamples_PARMETIS: ${TESTEXAMPLES_PARMETIS}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_PARMETIS}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_PARMETIS}\n"; fi
testexamples_METIS: ${TESTEXAMPLES_METIS}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_METIS}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_METIS}\n"; fi
testexamples_SPAI: ${TESTEXAMPLES_SPAI}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_SPAI}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_SPAI}\n"; fi
testexamples_ADIFOR: ${TESTEXAMPLES_ADIFOR}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_ADIFOR}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_ADIFOR}\n"; fi
testexamples_FFTW: ${TESTEXAMPLES_FFTW}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_FFTW}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_FFTW}\n"; fi
testexamples_FFTW_COMPLEX: ${TESTEXAMPLES_FFTW_COMPLEX}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_FFTW_COMPLEX}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_FFTW_COMPLEX}\n"; fi
testexamples_SAWS: ${TESTEXAMPLES_SAWS}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_SAWS}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_SAWS}\n"; fi
testexamples_VALGRIND: ${TESTEXAMPLES_VALGRIND}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_SAWS}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_SAWS}\n"; fi
testexamples_MATLAB: ${TESTEXAMPLES_MATLAB}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_MATLAB}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_MATLAB}\n"; fi
testexamples_MATLAB_ENGINE: ${TESTEXAMPLES_MATLAB_ENGINE}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_MATLAB_ENGINE}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_MATLAB_ENGINE}\n"; fi
testexamples_MUMPS: ${TESTEXAMPLES_MUMPS}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_MUMPS}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_MUMPS}\n"; fi
testexamples_MUMPS_DATAFILESPATH: ${TESTEXAMPLES_MUMPS_DATAFILESPATH}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_MUMPS_DATAFILESPATH}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_MUMPS_DATAFILESPATH}\n"; fi
testexamples_SUPERLU: ${TESTEXAMPLES_SUPERLU}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_SUPERLU}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_SUPERLU}\n"; fi
testexamples_SUPERLU_DATAFILESPATH: ${TESTEXAMPLES_SUPERLU_DATAFILESPATH}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_SUPERLU_DATAFILESPATH}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_SUPERLU_DATAFILESPATH}\n"; fi
testexamples_STRUMPACK: ${TESTEXAMPLES_STRUMPACK}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_SUPERLU_DATAFILESPATH}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_STRUMPACK}\n"; fi
testexamples_PARMETIS_DATAFILESPATH: ${TESTEXAMPLES_PARMETIS_DATAFILESPATH}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_PARMETIS_DATAFILESPATH}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_PARMETIS_DATAFILESPATH}\n"; fi
testexamples_ELEMENTAL: ${TESTEXAMPLES_ELEMENTAL}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_ELEMENTAL}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_ELEMENTAL}\n"; fi
testexamples_ELEMENTAL_DATAFILESPATH: ${TESTEXAMPLES_ELEMENTAL_DATAFILESPATH}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_ELEMENTAL_DATAFILESPATH}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_ELEMENTAL_DATAFILESPATH}\n"; fi
testexamples_ELEMENTAL_COMPLEX_DATAFILESPATH: ${TESTEXAMPLES_ELEMENTAL_COMPLEX_DATAFILESPATH}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_ELEMENTAL_COMPLEX_DATAFILESPATH}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_ELEMENTAL_COMPLEX}\n"; fi
testexamples_SUNDIALS: ${TESTEXAMPLES_SUNDIALS}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_SUNDIALS}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_SUNDIALS}\n"; fi
testexamples_SUITESPARSE: ${TESTEXAMPLES_SUITESPARSE}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_SUITESPARSE}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_SUITESPARSE}\n"; fi
testexamples_SUITESPARSE_DATAFILESPATH: ${TESTEXAMPLES_SUITESPARSE_DATAFILESPATH}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_SUITESPARSE_DATAFILESPATH}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_SUITESPARSE_DATAFILESPATH}\n"; fi
testexamples_MKL_PARDISO: ${TESTEXAMPLES_MKL_PARDISO}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_MKL_PARDISO}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_MKL_PARDISO}\n"; fi
testexamples_SUPERLU_DIST: ${TESTEXAMPLES_SUPERLU_DIST}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_SUPERLU_DIST}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_SUPERLU_DIST}\n"; fi
testexamples_SUPERLU_DIST_DATAFILESPATH: ${TESTEXAMPLES_SUPERLU_DIST_DATAFILESPATH}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_SUPERLU_DIST_DATAFILESPATH}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_SUPERLU_DIST_DATAFILESPATH}\n"; fi
testexamples_SUPERLU_DIST_COMPLEX: ${TESTEXAMPLES_SUPERLU_DIST_COMPLEX}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_SUPERLU_DIST_COMPLEX}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_SUPERLU_DIST_COMPLEX}\n"; fi
testexamples_SUPERLU_DIST_COMPLEX_DATAFILESPATH: ${TESTEXAMPLES_SUPERLU_DIST_COMPLEX_DATAFILESPATH}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_SUPERLU_DIST_COMPLEX_DATAFILESPATH}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_SUPERLU_DIST_COMPLEX}\n"; fi
testexamples_HYPRE: ${TESTEXAMPLES_HYPRE}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_HYPRE}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_HYPRE}\n"; fi
testexamples_HYPRE_DATAFILESPATH: ${TESTEXAMPLES_HYPRE_DATAFILESPATH}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_HYPRE_DATAFILESPATH}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_HYPRE_DATAFILESPATH}\n"; fi
testexamples_CHOMBO_DATAFILESPATH: ${TESTEXAMPLES_CHOMBO_DATAFILESPATH}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_CHOMBO_DATAFILESPATH}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_CHOMBO_DATAFILESPATH}\n"; fi
testexamples_HDF5: ${TESTEXAMPLES_HDF5}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_HDF5}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_HDF5}\n"; fi
testexamples_TRIANGLE_HDF5: ${TESTEXAMPLES_TRIANGLE_HDF5}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_TRIANGLE_HDF5}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_TRIANGLE_HDF5}\n"; fi
testexamples_CHACO: ${TESTEXAMPLES_CHACO}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_CHACO}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_CHACO}\n"; fi
testexamples_CHOMBO: ${TESTEXAMPLES_CHOMBO}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_CHOMBO}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_CHOMBO}\n"; fi
testexamples_TRIANGLE: ${TESTEXAMPLES_TRIANGLE}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_TRIANGLE}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_TRIANGLE}\n"; fi
testexamples_CTETGEN: ${TESTEXAMPLES_CTETGEN}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_CTETGEN}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_CTETGEN}\n"; fi
testexamples_SSL: ${TESTEXAMPLES_SSL}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_SSL}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_SSL}\n"; fi
testexamples_PARMS: ${TESTEXAMPLES_PARMS}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_PARMS}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_PARMS}\n"; fi
testexamples_TCHEM: ${TESTEXAMPLES_TCHEM}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_TCHEM}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_TCHEM}\n"; fi
testexamples_BOOST: ${TESTEXAMPLES_BOOST}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_BOOST}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_BOOST}\n"; fi
testexamples_TETGEN: ${TESTEXAMPLES_TETGEN}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_TETGEN}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_TETGEN}\n"; fi
testexamples_PTSCOTCH: ${TESTEXAMPLES_PTSCOTCH}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_PTSCOTCH}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_PTSCOTCH}\n"; fi
testexamples_PASTIX: ${TESTEXAMPLES_PASTIX}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_PASTIX}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_PASTIX}\n"; fi
testexamples_PASTIX_DATAFILESPATH: ${TESTEXAMPLES_PASTIX_DATAFILESPATH}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_PASTIX_DATAFILESPATH}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_PASTIX_DATAFILESPATH}\n"; fi
testexamples_ML: ${TESTEXAMPLES_ML}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_ML}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_ML}\n"; fi
testexamples_CUSP: ${TESTEXAMPLES_CUSP}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_CUSP}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_CUSP}\n"; fi
testexamples_VECCUDA: ${TESTEXAMPLES_VECCUDA}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_VECCUDA}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_CUSP}\n"; fi
testexamples_VECCUDA_Complex: ${TESTEXAMPLES_VECCUDA_COMPLEX}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_VECCUDA_COMPLEX}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_CUSP}\n"; fi
testexamples_VECCUDA_NoComplex: ${TESTEXAMPLES_VECCUDA_NOCOMPLEX}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_VECCUDA_NOCOMPLEX}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_CUSP}\n"; fi
testexamples_VECCUDA_DATAFILESPATH: ${TESTEXAMPLES_VECCUDA_DATAFILESPATH}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_VECCUDA_DATAFILESPATH}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_CUSP}\n"; fi
testexamples_YAML: ${TESTEXAMPLES_YAML}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_YAML}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_YAML}\n"; fi
testexamples_MOAB: ${TESTEXAMPLES_MOAB}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_MOAB}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_MOAB}\n"; fi
testexamples_MOAB_HDF5: ${TESTEXAMPLES_MOAB_HDF5}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_MOAB_HDF5}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_MOAB_HDF5}\n"; fi
testexamples_TRILINOS: ${TESTEXAMPLES_TRILINOS}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_TRILINOS}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_TRILINOS}\n"; fi
testexamples_REVOLVE: ${TESTEXAMPLES_REVOLVE}
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_REVOLVE}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_REVOLVE}\n"; fi
testexamples_X:
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_X}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_X}\n"; fi
testexamples_OPENGL:
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_OPENGL}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_OPENGL}\n"; fi
testexamples_MPE:
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_MPE}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_MPE}\n"; fi
testexamples_ESSL:
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_ESSL}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_ESSL}\n"; fi
testexamples_MPI:
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_MPI}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_MPI}\n"; fi
testexamples_BLASLAPACK:
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_BLASLAPACK}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_BLASLAPACK}\n"; fi
testexamples_SOWING:
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_SOWING}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_SOWING}\n"; fi
testexamples_C2HTML:
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_C2HTML}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_C2HTML}\n"; fi
testexamples_BLACS:
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_BLACS}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_BLACS}\n"; fi
testexamples_SCALAPACK:
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_SCALAPACK}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_SCALAPACK}\n"; fi
testexamples_CMAKE:
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_CMAKE}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_CMAKE}\n"; fi
testexamples_AFTERIMAGE:
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_AFTERIMAGE}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_AFTERIMAGE}\n"; fi
testexamples_OPENMP:
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_OPENMP}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_OPENMP}\n"; fi
testexamples_EXODUSII:
	-@ if test ${PRINT_PROGRESS}foo = debugtestfoo -a -n "${TESTEXAMPLES_EXODUSII}"; then printf "Running examples in `pwd`:\n ${TESTEXAMPLES_EXODUSII}\n"; fi

buildexamples_C:
	-@${OMAKE} testexamples_C TESTEXAMPLES_C=`echo ${TESTEXAMPLES_C} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_Cxx:
	-@${OMAKE} testexamples_Cxx TESTEXAMPLES_CXX=`echo ${TESTEXAMPLES_CXX} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_C_X:
	-@${OMAKE} testexamples_C_X TESTEXAMPLES_C_X=`echo ${TESTEXAMPLES_C_X} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_Fortran:
	-@${OMAKE} testexamples_Fortran TESTEXAMPLES_FORTRAN=`echo ${TESTEXAMPLES_FORTRAN} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_C_X_MPIUni:
	-@${OMAKE} testexamples_C_X_MPIUni TESTEXAMPLES_C_X_MPIUNI=`echo ${TESTEXAMPLES_C_X_MPIUNI} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_C_Complex:
	-@${OMAKE} testexamples_C_Complex TESTEXAMPLES_C_COMPLEX=`echo ${TESTEXAMPLES_C_COMPLEX} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_C_NoComplex:
	-@${OMAKE} testexamples_C_NoComplex TESTEXAMPLES_C_NOCOMPLEX=`echo ${TESTEXAMPLES_C_NOCOMPLEX} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_DATAFILESPATH:
	-@${OMAKE} testexamples_DATAFILESPATH TESTEXAMPLES_DATAFILESPATH=`echo ${TESTEXAMPLES_DATAFILESPATH} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_Cxx_DATAFILESPATH:
	-@${OMAKE} testexamples_Cxx_DATAFILESPATH TESTEXAMPLES_CXX_DATAFILESPATH=`echo ${TESTEXAMPLES_CXX_DATAFILESPATH} | sed s/runex[0-9]*[a-z0-9_]*//g`

buildexamples_F90_DataTypes:
	-@${OMAKE} testexamples_F90_DataTypes TESTEXAMPLES_F90_DATATYPES=`echo ${TESTEXAMPLES_F90_DATATYPES} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_Fortran_NoComplex:
	-@${OMAKE} testexamples_Fortran_NoComplex TESTEXAMPLES_FORTRAN_NOCOMPLEX=`echo ${TESTEXAMPLES_FORTRAN_NOCOMPLEX} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_Fortran_MPIUni:
	-@${OMAKE} testexamples_Fortran_MPIUni TESTEXAMPLES_FORTRAN_MPIUNI=`echo ${TESTEXAMPLES_FORTRAN_MPIUNI} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_Fortran_Complex:
	-@${OMAKE} testexamples_Fortran_Complex TESTEXAMPLES_FORTRAN_COMPLEX=`echo ${TESTEXAMPLES_FORTRAN_COMPLEX} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_C_Complex_MPIUni:
	-@${OMAKE} testexamples_C_Complex_MPIUni TESTEXAMPLES_C_COMPLEX_MPIUNI=`echo ${TESTEXAMPLES_C_COMPLEX_MPIUNI} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_F90:
	-@${OMAKE} testexamples_F90 TESTEXAMPLES_F90=`echo ${TESTEXAMPLES_F90} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_F90_Complex:
	-@${OMAKE} testexamples_F90_Complex TESTEXAMPLES_F90_COMPLEX=`echo ${TESTEXAMPLES_F90_COMPLEX} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_F90_NoComplex:
	-@${OMAKE} testexamples_F90_NoComplex TESTEXAMPLES_F90_NOCOMPLEX=`echo ${TESTEXAMPLES_F90_NOCOMPLEX} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_F2003:
	-@${OMAKE} testexamples_F2003 TESTEXAMPLES_2003=`echo ${TESTEXAMPLES_F2003} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_13:
	-@${OMAKE} testexamples_13 TESTEXAMPLES_13=`echo ${TESTEXAMPLES_13} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_17:
	-@${OMAKE} testexamples_17 TESTEXAMPLES_17=`echo ${TESTEXAMPLES_17} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_18:
	-@${OMAKE} testexamples_18 TESTEXAMPLES_18=`echo ${TESTEXAMPLES_18} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_PARMETIS:
	-@${OMAKE} testexamples_PARMETIS TESTEXAMPLES_PARMETIS=`echo ${TESTEXAMPLES_PARMETIS} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_METIS:
	-@${OMAKE} testexamples_METIS TESTEXAMPLES_METIS=`echo ${TESTEXAMPLES_METIS} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_SPAI:
	-@${OMAKE} testexamples_SPAI TESTEXAMPLES_SPAI=`echo ${TESTEXAMPLES_SPAI} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_ADIFOR:
	-@${OMAKE} testexamples_ADIFOR TESTEXAMPLES_ADIFOR=`echo ${TESTEXAMPLES_ADIFOR} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_FFTW:
	-@${OMAKE} testexamples_FFTW TESTEXAMPLES_FFTW=`echo ${TESTEXAMPLES_FFTW} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_FFTW_COMPLEX:
	-@${OMAKE} testexamples_FFTW_COMPLEX TESTEXAMPLES_FFTW_COMPLEX=`echo ${TESTEXAMPLES_FFTW_COMPLEX} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_SAWS:
	-@${OMAKE} testexamples_SAWS TESTEXAMPLES_SAWS=`echo ${TESTEXAMPLES_SAWS} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_VALGRIND:
	-@${OMAKE} testexamples_VALGRIND TESTEXAMPLES_VALGRIND=`echo ${TESTEXAMPLES_VALGRIND} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_MATLAB:
	-@${OMAKE} testexamples_MATLAB TESTEXAMPLES_MATLAB=`echo ${TESTEXAMPLES_MATLAB} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_MATLAB_ENGINE:
	-@${OMAKE} testexamples_MATLAB_ENGINE TESTEXAMPLES_MATLAB_ENGINE=`echo ${TESTEXAMPLES_MATLAB_ENGINE} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_MUMPS:
	-@${OMAKE} testexamples_MUMPS TESTEXAMPLES_MUMPS=`echo ${TESTEXAMPLES_MUMPS} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_SUPERLU:
	-@${OMAKE} testexamples_SUPERLU TESTEXAMPLES_SUPERLU=`echo ${TESTEXAMPLES_SUPERLU} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_STRUMPACK:
	-@${OMAKE} testexamples_STRUMPACK TESTEXAMPLES_STRUMPACK=`echo ${TESTEXAMPLES_STRUMPACK} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_SUNDIALS:
	-@${OMAKE} testexamples_SUNDIALS TESTEXAMPLES_SUNDIALS=`echo ${TESTEXAMPLES_SUNDIALS} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_SUITESPARSE:
	-@${OMAKE} testexamples_SUITESPARSE TESTEXAMPLES_SUITESPARSE=`echo ${TESTEXAMPLES_SUITESPARSE} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_MKL_PARDISO:
	-@${OMAKE} testexamples_MKL_PARDISO TESTEXAMPLES_MKL_PARDISO=`echo ${TESTEXAMPLES_MKL_PARDISO} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_SUPERLU_DIST:
	-@${OMAKE} testexamples_SUPERLU_DIST TESTEXAMPLES_SUPERLU_DIST=`echo ${TESTEXAMPLES_SUPERLU_DIST} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_SUPERLU_DIST_COMPLEX:
	-@${OMAKE} testexamples_SUPERLU_DIST_COMPLEX TESTEXAMPLES_SUPERLU_DIST_COMPLEX=`echo ${TESTEXAMPLES_SUPERLU_DIST_COMPLEX} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_SUPERLU_DIST_COMPLEX_DATAFILESPATH:
	-@${OMAKE} testexamples_SUPERLU_DIST_COMPLEX_DATAFILESPATH TESTEXAMPLES_SUPERLU_DIST_COMPLEX_DATAFILESPATH=`echo ${TESTEXAMPLES_SUPERLU_DIST_COMPLEX_DATAFILESPATH} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_HYPRE_DATAFILESPATH:
	-@${OMAKE} testexamples_HYPRE_DATAFILESPATH TESTEXAMPLES_HYPRE_DATAFILESPATH=`echo ${TESTEXAMPLES_HYPRE_DATAFILESPATH} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_HYPRE:
	-@${OMAKE} testexamples_HYPRE TESTEXAMPLES_HYPRE=`echo ${TESTEXAMPLES_HYPRE} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_HDF5:
	-@${OMAKE} testexamples_HDF5 TESTEXAMPLES_HDF5=`echo ${TESTEXAMPLES_HDF5} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_CHACO:
	-@${OMAKE} testexamples_CHACO TESTEXAMPLES_CHACO=`echo ${TESTEXAMPLES_CHACO} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_CHOMBO:
	-@${OMAKE} testexamples_CHOMBO TESTEXAMPLES_CHOMBO=`echo ${TESTEXAMPLES_CHOMBO} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_TRIANGLE:
	-@${OMAKE} testexamples_TRIANGLE TESTEXAMPLES_TRIANGLE=`echo ${TESTEXAMPLES_TRIANGLE} | sed s/runex[0-9]*[a-z0-9_]*//g`

buildexamples_BOOST:
	-@${OMAKE} testexamples_BOOST TESTEXAMPLES_BOOST=`echo ${TESTEXAMPLES_BOOST} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_TETGEN:
	-@${OMAKE} testexamples_TETGEN TESTEXAMPLES_TETGEN=`echo ${TESTEXAMPLES_TETGEN} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_PTSCOTCH:
	-@${OMAKE} testexamples_PTSCOTCH TESTEXAMPLES_PTSCOTCH=`echo ${TESTEXAMPLES_PTSCOTCH} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_PASTIX:
	-@${OMAKE} testexamples_PASTIX TESTEXAMPLES_PASTIX=`echo ${TESTEXAMPLES_PASTIX} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_ML:
	-@${OMAKE} testexamples_ML TESTEXAMPLES_ML=`echo ${TESTEXAMPLES_ML} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_CUSP:
	-@${OMAKE} testexamples_CUSP TESTEXAMPLES_CUSP=`echo ${TESTEXAMPLES_CUSP} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_CUDA:
	-@${OMAKE} testexamples_CUDA TESTEXAMPLES_CUDA=`echo ${TESTEXAMPLES_CUDA} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_YAML:
	-@${OMAKE} testexamples_YAML TESTEXAMPLES_YAML=`echo ${TESTEXAMPLES_YAML} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_MOAB:
	-@${OMAKE} testexamples_MOAB TESTEXAMPLES_MOAB=`echo ${TESTEXAMPLES_MOAB} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_REVOLVE:
	-@${OMAKE} testexamples_REVOLVE TESTEXAMPLES_REVOLVE=`echo ${TESTEXAMPLES_REVOLVE} | sed s/runex[0-9]*[a-z0-9_]*//g`
buildexamples_X:
buildexamples_OPENGL:
buildexamples_MPE:
buildexamples_ESSL:
buildexamples_MPI:
buildexamples_BLASLAPACK:
buildexamples_SOWING:
buildexamples_C2HTML:
buildexamples_BLACS:
buildexamples_SCALAPACK:
buildexamples_CMAKE:
buildexamples_AFTERIMAGE:
buildexamples_OPENMP:

TESTMODE = testexamples

ALLTESTS_PRINT_PROGRESS = no
# To print the sources use this
#ALLTESTS_PRINT_PROGRESS = debugtest
ALLTESTS_CHECK_FAILURES = no

alltests:
	-@${RM} -rf ${PETSC_ARCH}/lib/petsc/conf/alltests.log alltests.log
	-@if [ x${PETSC_ARCH} != x -a -d "${PETSC_ARCH}" ]; then \
            ln -s ${PETSC_ARCH}/lib/petsc/conf/alltests.log alltests.log ;\
            ALLTESTSLOG=${PETSC_ARCH}/lib/petsc/conf/alltests.log ;\
          else \
            ALLTESTSLOG=alltests.log ;\
          fi; \
          ${OMAKE} allgtest alltest PETSC_ARCH=${PETSC_ARCH} PETSC_DIR=${PETSC_DIR} MPIEXEC="${MPIEXEC}" DATAFILESPATH=${DATAFILESPATH} 2>&1 | tee $${ALLTESTSLOG};\
          if [ x${ALLTESTS_CHECK_FAILURES} = xyes -a ${PETSC_PRECISION} != single ]; then \
            cat $${ALLTESTSLOG} | sed -e '1d' -e '$$d' | \
            grep -v '^[\*]\{7,7\} Testing: ${TESTMODE}_[a-zA-Z0-9_]* [\*]\{7,7\}$$' | \
            grep -v '^[\.]*$$' | wc -l | grep '^[ ]*0$$' > /dev/null; \
          fi;

allgtest-tap:
	-@cd ${PETSC_DIR}; ${OMAKE} -f gmakefile.test -j ${MAKE_NP} test V=0

allgtest:
	-@cd ${PETSC_DIR}; ${OMAKE} -k -f gmakefile.test -j ${MAKE_NP} test V=0 2>&1 | egrep -v '^(ok [^#]*(# SKIP|# TODO|$$)|[A-Za-z][A-Za-z0-9_]*\.(c|F|cxx|F90).$$)|warning: linker scope was specified more than once'

alltest:
	-@date
	-@for i in ${TEST_RUNS} ; do \
          echo "******* Testing: ${TESTMODE}_$$i *******"; \
	  ${OMAKE} PATH="${PETSC_DIR}/${PETSC_ARCH}/lib:${PATH}" DIFF=${PETSC_DIR}/bin/petscdiff PETSC_ARCH=${PETSC_ARCH} PETSC_DIR=${PETSC_DIR} ACTION=${TESTMODE}_$$i MPIEXEC="${MPIEXEC}" PRINT_PROGRESS=${ALLTESTS_PRINT_PROGRESS} tree ; \
	  if [ ${ALLTESTS_PRINT_PROGRESS}foo = dotfoo ] ; then printf "\n"; fi; \
	done
	-@date

#
#  parallel make of examples by directory
#  The MAKEFLAGS= MFLAGS=  are so that the sub make processes don't know about the parallel make server of the main make process
#  split the larger test directories up for more parallelism
SUBDIRS =    src/ts/examples/tutorials src/snes/examples/tutorials src/ksp/ksp/examples/tutorials src/dm src/sys src/mat src/vec src/ksp/ksp/examples/tests src/ksp/ksp/examples/tests src/ts/examples/tests src/ksp/pc

$(SUBDIRS)::
	MAKEFLAGS= MFLAGS= $(OMAKE) -j 1 -C $@ alltest  > $@/alltests.log  2>&1 

palltests:
	-@${RM} ${PETSC_ARCH}/lib/petsc/conf/alltests.log alltests.log
	-@ln -s ${PETSC_ARCH}/lib/petsc/conf/alltests.log alltests.log
	-@${OMAKE} -j ${MAKE_NP} $(SUBDIRS)
	-@cat src/*/alltests.log src/*/examples/*/alltests.log  src/ksp/pc/alltests.log  > ${PETSC_ARCH}/lib/petsc/conf/alltests.log


tests_DATAFILESPATH:
	${OMAKE} ACTION=testexamples_DATAFILESPATH tree DATAFILESPATH=${DATAFILESPATH}


