
CFLAGS	  =
FFLAGS    =
CPPFLAGS  =
FPPFLAGS  =
LOCDIR    = src/ksp/ksp/examples/tests/
EXAMPLESC       = ex1.c ex2.c ex3.c ex4.c ex6.c  ex8.c ex10.c ex11.c ex14.c \
                ex15.c ex17.c ex18.c ex19.c ex20.c ex21.c ex22.c ex24.c \
                ex25.c ex26.c ex27.c ex28.c ex29.c ex30.c ex31.c ex32.c \
                ex33.c ex37.c ex38.c ex39.c ex40.c ex41.c ex42.c \
                ex43.c ex44.c ex45.c ex46.cxx ex47.c ex48.c ex49.c ex50.c ex51.c ex52.c ex53.c ex54.c ex55.c
EXAMPLESCH      =
EXAMPLESF       = ex5f.F ex12f.F ex16f.F90 ex52f.F ex54f.F

include ${PETSC_DIR}/lib/petsc/conf/variables
include ${PETSC_DIR}/lib/petsc/conf/rules

ex1: ex1.o  chkopts
	-${CLINKER} -o ex1 ex1.o  ${PETSC_KSP_LIB}
	${RM} ex1.o

ex2: ex2.o  chkopts
	-${CLINKER} -o ex2 ex2.o  ${PETSC_KSP_LIB}
	${RM} ex2.o

ex3: ex3.o  chkopts
	-${CLINKER} -o ex3 ex3.o  ${PETSC_KSP_LIB}
	${RM} ex3.o

ex4: ex4.o  chkopts
	-${CLINKER} -o ex4 ex4.o  ${PETSC_KSP_LIB}
	${RM} ex4.o

ex5: ex5.o  chkopts
	-${CLINKER} -o ex5 ex5.o  ${PETSC_KSP_LIB}
	${RM} ex5.o

ex6: ex6.o  chkopts
	-${CLINKER} -o ex6 ex6.o  ${PETSC_KSP_LIB}
	${RM} ex6.o

ex8: ex8.o  chkopts
	-${CLINKER} -o ex8 ex8.o  ${PETSC_KSP_LIB}
	${RM} ex8.o

ex9: ex9.o  chkopts
	-${CLINKER} -o ex9 ex9.o  ${PETSC_KSP_LIB}
	${RM} ex9.o

ex10: ex10.o  chkopts
	-${CLINKER} -o ex10 ex10.o  ${PETSC_KSP_LIB}
	${RM} ex10.o

ex11: ex11.o  chkopts
	-${CLINKER} -o ex11 ex11.o  ${PETSC_KSP_LIB}
	${RM} ex11.o

ex12f: ex12f.o  chkopts
	-${FLINKER} -o ex12f ex12f.o  ${PETSC_KSP_LIB}
	${RM} ex12f.o

ex5f: ex5f.o  chkopts
	-${FLINKER} -o ex5f ex5f.o  ${PETSC_KSP_LIB}
	${RM} ex5f.o

ex14: ex14.o  chkopts
	-${CLINKER} -o ex14 ex14.o  ${PETSC_KSP_LIB}
	${RM} ex14.o

ex15: ex15.o  chkopts
	-${CLINKER} -o ex15 ex15.o  ${PETSC_KSP_LIB}
	${RM} ex15.o

ex16f: ex16f.o  chkopts
	-${FLINKER} -o ex16f ex16f.o  ${PETSC_KSP_LIB}
	${RM} ex16f.o

ex17: ex17.o  chkopts
	-${CLINKER} -o ex17 ex17.o  ${PETSC_KSP_LIB}
	${RM} ex17.o

ex18: ex18.o  chkopts
	-${CLINKER} -o ex18 ex18.o  ${PETSC_KSP_LIB}
	${RM} ex18.o

ex19: ex19.o  chkopts
	-${CLINKER} -o ex19 ex19.o  ${PETSC_KSP_LIB}
	${RM} ex19.o

ex20: ex20.o  chkopts
	-${CLINKER} -o ex20 ex20.o  ${PETSC_KSP_LIB}
	${RM} ex20.o

ex21: ex21.o  chkopts
	-${CLINKER} -o ex21 ex21.o   ${PETSC_KSP_LIB}
	${RM} ex21.o

ex22: ex22.o  chkopts
	-${CLINKER} -o ex22 ex22.o  ${PETSC_KSP_LIB}
	${RM} ex22.o

ex24: ex24.o  chkopts
	-${CLINKER} -o ex24 ex24.o  ${PETSC_KSP_LIB}
	${RM} ex24.o
ex25: ex25.o  chkopts
	-${CLINKER} -o ex25 ex25.o  ${PETSC_KSP_LIB}
	${RM} ex25.o
ex26: ex26.o  chkopts
	-${CLINKER} -o ex26 ex26.o  ${PETSC_KSP_LIB}
	${RM} ex26.o
ex27: ex27.o  chkopts
	-${CLINKER} -o ex27 ex27.o  ${PETSC_KSP_LIB}
	${RM} ex27.o
ex28: ex28.o  chkopts
	-${CLINKER} -o ex28 ex28.o  ${PETSC_KSP_LIB}
	${RM} ex28.o
ex29: ex29.o  chkopts
	-${CLINKER} -o ex29 ex29.o  ${PETSC_KSP_LIB}
	${RM} ex29.o
ex30: ex30.o  chkopts
	-${CLINKER} -o ex30 ex30.o  ${PETSC_KSP_LIB}
	${RM} ex30.o
ex31: ex31.o  chkopts
	-${CLINKER} -o ex31 ex31.o  ${PETSC_KSP_LIB}
	${RM} ex31.o
ex32: ex32.o  chkopts
	-${CLINKER} -o ex32 ex32.o  ${PETSC_KSP_LIB}
	${RM} ex32.o
ex33: ex33.o  chkopts
	-${CLINKER} -o ex33 ex33.o  ${PETSC_KSP_LIB}
	${RM} ex33.o
ex34: ex34.o  chkopts
	-${CLINKER} -o ex34 ex34.o  ${PETSC_KSP_LIB}
	${RM} ex34.o
ex37: ex37.o  chkopts
	-${CLINKER} -o ex37 ex37.o  ${PETSC_KSP_LIB}
	${RM} ex37.o
ex38: ex38.o chkopts
	-${CLINKER} -o ex38 ex38.o ${PETSC_KSP_LIB}
	${RM} ex38.o
ex39: ex39.o chkopts
	-${CLINKER} -o ex39 ex39.o ${PETSC_KSP_LIB}
	${RM} ex39.o
ex40: ex40.o chkopts
	-${CLINKER} -o ex40 ex40.o ${PETSC_KSP_LIB}
	${RM} ex40.o
ex41: ex41.o chkopts
	-${CLINKER} -o ex41 ex41.o ${PETSC_KSP_LIB}
	${RM} ex41.o
ex42: ex42.o chkopts
	-${CLINKER} -o ex42 ex42.o ${PETSC_KSP_LIB}
	${RM} ex42.o
ex43: ex43.o chkopts
	-${CLINKER} -o ex43 ex43.o ${PETSC_KSP_LIB}
	${RM} ex43.o
ex44: ex44.o chkopts
	-${CLINKER} -o ex44 ex44.o ${PETSC_KSP_LIB}
	${RM} ex44.o
ex45: ex45.o chkopts
	-${CLINKER} -o ex45 ex45.o ${PETSC_KSP_LIB}
	${RM} ex45.o
ex46: ex46.o chkopts
	-${CLINKER} -o ex46 ex46.o ${PETSC_KSP_LIB}
	${RM} ex46.o
ex47: ex47.o chkopts
	-${CLINKER} -o ex47 ex47.o ${PETSC_KSP_LIB}
	${RM} ex47.o
ex47f: ex47f.o chkopts
	-${FLINKER} -o ex47f ex47f.o ${PETSC_KSP_LIB}
	${RM} ex47f.o
ex48: ex48.o chkopts
	-${CLINKER} -o ex48 ex48.o ${PETSC_KSP_LIB}
	${RM} ex48.o
ex49: ex49.o chkopts
	-${CLINKER} -o ex49 ex49.o ${PETSC_KSP_LIB}
	${RM} ex49.o
ex50: ex50.o chkopts
	-${CLINKER} -o ex50 ex50.o ${PETSC_KSP_LIB}
	${RM} ex50.o
ex51: ex51.o chkopts
	-${CLINKER} -o ex51 ex51.o ${PETSC_KSP_LIB}
	${RM} ex51.o
ex52f: ex52f.o  chkopts
	-${FLINKER} -o ex52f ex52f.o  ${PETSC_KSP_LIB}
	${RM} ex52f.o
ex53: ex53.o chkopts
	-${CLINKER} -o ex53 ex53.o ${PETSC_KSP_LIB}
	${RM} ex53.o
ex54: ex54.o chkopts
	-${CLINKER} -o ex54 ex54.o ${PETSC_KSP_LIB}
	${RM} ex54.o
ex54f: ex54f.o  chkopts
	-${FLINKER} -o ex54f ex54f.o  ${PETSC_KSP_LIB}
	${RM} ex54f.o
ex55: ex55.o chkopts
	-${CLINKER} -o ex55 ex55.o ${PETSC_KSP_LIB}
	${RM} ex55.o
#------------------------------------------------------------------------------------
runex32_testset1:
	@-count=0; \
	for i in 1 2 3 4 5; do \
	    for ordering in natural nd; do \
		for simtype in '' -trans;do \
		    for flevels in 0 1 2 3; do \
	    	    	count=`expr $$count + 1`; \
	   		echo "[$${count}]_start" > ex32.tmp 2>&1; \
		    	${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dof $$i -pc_type ilu -pc_factor_mat_ordering_type $$ordering -dm_mat_type aij $$simtype -pc_factor_levels $$flevels >> ex32.tmp 2>&1;  \
		    	echo "[$${count}]_end" >> ex32.tmp 2>&1;  \
		    	sed -n '/\['$${count}']_start/,/\['$${count}']_end/p' output/ex32_1.out > ex32.tmp2 2>&1;  \
		    	if (${DIFF} ex32.tmp ex32.tmp2) then true;  \
		    	    else printf "${PWD}\nPossible problem with ./ex32 -ksp_monitor_short -dof $$i -pc_type ilu -pc_factor_mat_ordering_type $$ordering -dm_mat_type aij $$simtype -pc_factor_levels $$flevels"; fi;   \
			    ${RM} -f ex32.tmp; ${RM} -f ex32.tmp2; \
	    	    done; \
		done; \
	    done; \
	done;

runex32_testset2:
	@-count=0; \
	for i in 1 2 3 4 5 6 7 8; do \
	    for ordering in natural nd; do \
		for simtype in '' -trans;do \
		    for flevels in 0 1 2 3; do \
                        count=`expr $$count + 1`; \
	   		echo "[$${count}]_start" > ex32.tmp 2>&1; \
		    	${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dof $$i -pc_type ilu -pc_factor_mat_ordering_type $$ordering -dm_mat_type baij $$simtype -pc_factor_levels $$flevels >> ex32.tmp 2>&1;  \
		    	    echo "[$${count}]_end" >> ex32.tmp 2>&1;  \
		    	    sed -n '/\['$${count}']_start/,/\['$${count}']_end/p' output/ex32_2.out > ex32.tmp2 2>&1;  \
		    	if (${DIFF} ex32.tmp ex32.tmp2) then true;  \
		    	    else printf "${PWD}\nPossible problem with ./ex32 -ksp_monitor_short -dof $$i -pc_type ilu -pc_factor_mat_ordering_type $$ordering -dm_mat_type baij $$simtype -pc_factor_levels $$flevels"; fi;   \
			${RM} -f ex32.tmp; ${RM} -f ex32.tmp2; \
	    	    done; \
		done; \
	    done; \
	done;

runex32_testset3:
	@-count=0; \
	for i in 1 2 3 4 5; do \
	    for ordering in natural nd; do \
		for simtype in '' -trans;do \
	    	    count=`expr $$count + 1`; \
	   	    echo "[$${count}]_start" > ex32.tmp 2>&1; \
		    ${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dof $$i -pc_type lu -pc_factor_mat_ordering_type $$ordering -dm_mat_type aij $$simtype >> ex32.tmp 2>&1;  \
		    echo "[$${count}]_end" >> ex32.tmp 2>&1;  \
		    sed -n '/\['$${count}']_start/,/\['$${count}']_end/p' output/ex32_3.out > ex32.tmp2 2>&1;  \
		    if (${DIFF} ex32.tmp ex32.tmp2) then true;  \
		    	else printf "${PWD}\nPossible problem with ./ex32 -ksp_monitor_short -dof $$i -pc_type lu -pc_factor_mat_ordering_type $$ordering -dm_mat_type aij $$simtype "; fi;   \
		    ${RM} -f ex32.tmp; ${RM} -f ex32.tmp2; \
		done; \
	    done; \
	done;

runex32_testset4:
	@-count=0; \
	for i in 1 2 3 4 5 6 7 8; do \
	    for ordering in natural nd; do \
		for simtype in '' -trans;do \
	    	    count=`expr $$count + 1`; \
	   	    echo "[$${count}]_start" > ex32.tmp 2>&1; \
		    ${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dof $$i -pc_type lu -pc_factor_mat_ordering_type $$ordering -dm_mat_type baij $$simtype >> ex32.tmp 2>&1;  \
		    echo "[$${count}]_end" >> ex32.tmp 2>&1;  \
		    sed -n '/\['$${count}']_start/,/\['$${count}']_end/p' output/ex32_4.out > ex32.tmp2 2>&1;  \
		    if (${DIFF} ex32.tmp ex32.tmp2) then true;  \
		    	else printf "${PWD}\nPossible problem with ./ex32 -ksp_monitor_short -dof $$i -pc_type lu -pc_factor_mat_ordering_type $$ordering -dm_mat_type baij $$simtype "; fi;   \
		    ${RM} -f ex32.tmp; ${RM} -f ex32.tmp2; \
		done; \
	    done; \
	done;

runex32_testset5:
	@-count=0; \
	for ordering in natural nd; do \
	    for flevels in 0 1 2 3; do \
		count=`expr $$count + 1`; \
	   	echo "[$${count}]_start" > ex32.tmp 2>&1; \
		${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dof 1 -pc_type icc -ksp_type cg -pc_factor_mat_ordering_type $$ordering -dm_mat_type aij -pc_factor_levels $$flevels >> ex32.tmp 2>&1;  \
		echo "[$${count}]_end" >> ex32.tmp 2>&1;  \
		sed -n '/\['$${count}']_start/,/\['$${count}']_end/p' output/ex32_5.out > ex32.tmp2 2>&1;  \
		if (${DIFF} ex32.tmp ex32.tmp2) then true;  \
		    	else printf "${PWD}\nPossible problem with ./ex32 -ksp_monitor_short -dof 1 -pc_type icc -ksp_type cg -pc_factor_mat_ordering_type $$ordering -dm_mat_type aij -pc_factor_levels $$flevels"; fi;   \
		${RM} -f ex32.tmp; ${RM} -f ex32.tmp2; \
	   done; \
	done; \

	@-count=8; \
        for ordering in natural nd; do \
	    count=`expr $$count + 1`; \
	    echo "[$${count}]_start" > ex32.tmp 2>&1; \
	    ${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dof 1 -pc_type cholesky -ksp_type cg -pc_factor_mat_ordering_type $$ordering -dm_mat_type aij >> ex32.tmp 2>&1;  \
	    echo "[$${count}]_end" >> ex32.tmp 2>&1;  \
	    sed -n '/\['$${count}']_start/,/\['$${count}']_end/p' output/ex32_5.out > ex32.tmp2 2>&1;  \
	    if (${DIFF} ex32.tmp ex32.tmp2) then true;  \
	    else printf "${PWD}\nPossible problem with ./ex32 -ksp_monitor_short -dof 1 -pc_type cholesky -ksp_type cg -pc_factor_mat_ordering_type $$ordering -dm_mat_type aij "; fi;   \
	    ${RM} -f ex32.tmp; ${RM} -f ex32.tmp2; \
	done; \


	@-count=10; \
	count=`expr $$count + 1`; \
	echo "[$${count}]_start" > ex32.tmp 2>&1; \
	${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dof 1 -pc_type icc -test_sbaij1 >> ex32.tmp 2>&1;  \
	echo "[$${count}]_end" >> ex32.tmp 2>&1;  \
	sed -n '/\['$${count}']_start/,/\['$${count}']_end/p' output/ex32_5.out > ex32.tmp2 2>&1;  \
	if (${DIFF} ex32.tmp ex32.tmp2) then true;  \
	else printf "${PWD}\nPossible problem with ./ex32 -ksp_monitor_short -dof 1 -pc_type icc -test_sbaij1"; fi;   \
	${RM} -f ex32.tmp; ${RM} -f ex32.tmp2

runex32_aij_sbaij_icc:
	-@${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dof 1 -test_sbaij1 -mat_ignore_lower_triangular -pc_type icc > ex32_aij_sbaij_icc.out 2>&1;
	-@${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dof 1 -dm_mat_type aij -pc_type icc -pc_factor_mat_ordering_type natural > ex32.tmp 2>&1; \
	if (${DIFF} ex32_aij_sbaij_icc.out ex32.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex32_aij_sbaij_icc, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex32.tmp; ${RM} -f ex32_aij_sbaij_icc.out

runex32_aij_sbaij_icc_lev1:
	-@${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dof 1 -test_sbaij1 -ksp_type cg -pc_type icc -pc_factor_levels 1 > ex32_aij_sbaij_icc.out 2>&1;
	-@${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dof 1 -dm_mat_type aij -ksp_type cg -pc_type icc -pc_factor_mat_ordering_type natural -pc_factor_levels 1 > ex32.tmp 2>&1; \
	if (${DIFF} ex32_aij_sbaij_icc.out ex32.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex32_aij_sbaij_icc_lev1, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex32.tmp; ${RM} -f ex32_aij_sbaij_icc.out

runex32_aij_sbaij_icc_lev10:
	-@${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dof 1 -test_sbaij1 -ksp_type cg -pc_type icc -pc_factor_levels 10 > ex32_aij_sbaij_icc.out 2>&1;
	-@${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dof 1 -dm_mat_type aij -ksp_type cg -pc_type icc -pc_factor_mat_ordering_type natural -pc_factor_levels 10 > ex32.tmp 2>&1; \
	if (${DIFF} ex32_aij_sbaij_icc.out ex32.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex32_aij_sbaij_icc_lev10, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex32.tmp; ${RM} -f ex32_aij_sbaij_icc.out

runex32_aij_sbaij_cholesky:
	-@${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dof 1 -test_sbaij1 -pc_type cholesky > ex32_aij_sbaij_icc.out 2>&1;
	-@${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dof 1 -dm_mat_type aij -pc_type cholesky -pc_factor_mat_ordering_type natural > ex32.tmp 2>&1; \
	if (${DIFF} ex32_aij_sbaij_icc.out ex32.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex32_aij_sbaij_icc_lev1, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex32.tmp; ${RM} -f ex32_aij_sbaij_icc.out

runex32_inode2:
	-@${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dm_mat_type aij -dof 2 > ex32_inode.out 2>&1;
	-@${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dm_mat_type aij -dof 2 -mat_no_inode > ex32.tmp 2>&1; \
	if (${DIFF} ex32_inode.out ex32.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex32_inode2, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex32.tmp; ${RM} -f ex32_inode.out
runex32_inode2_nd:
	-@${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dm_mat_type aij -dof 2 -pc_factor_mat_ordering_type nd > ex32_inode.out 2>&1;
	-@${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dm_mat_type aij -dof 2 -pc_factor_mat_ordering_type nd -mat_no_inode > ex32.tmp 2>&1; \
	if (${DIFF} ex32_inode.out ex32.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex32_inode2_nd, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex32.tmp; ${RM} -f ex32_inode.out

runex32_inode3:
	-@${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dm_mat_type aij -dof 3 > ex32_inode.out 2>&1;
	-@${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dm_mat_type aij -dof 3 -mat_no_inode > ex32.tmp 2>&1; \
	if (${DIFF} ex32_inode.out ex32.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex32_inode3, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex32.tmp; ${RM} -f ex32_inode.out
runex32_inode3_nd:
	-@${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dm_mat_type aij -dof 3 -pc_factor_mat_ordering_type nd > ex32_inode.out 2>&1;
	-@${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dm_mat_type aij -dof 3 -pc_factor_mat_ordering_type nd -mat_no_inode > ex32.tmp 2>&1; \
	if (${DIFF} ex32_inode.out ex32.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex32_inode3_nd, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex32.tmp; ${RM} -f ex32_inode.out

runex32_inode4:
	-@${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dm_mat_type aij -dof 4 > ex32_inode.out 2>&1;
	-@${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dm_mat_type aij -dof 4 -mat_no_inode > ex32.tmp 2>&1; \
	if (${DIFF} ex32_inode.out ex32.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex32_inode4, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex32.tmp; ${RM} -f ex32_inode.out
runex32_inode4_nd:
	-@${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dm_mat_type aij -dof 4 -pc_factor_mat_ordering_type nd > ex32_inode.out 2>&1;
	-@${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dm_mat_type aij -dof 4 -pc_factor_mat_ordering_type nd -mat_no_inode > ex32.tmp 2>&1; \
	if (${DIFF} ex32_inode.out ex32.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex32_inode4_nd, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex32.tmp; ${RM} -f ex32_inode.out

runex32_inode5:
	-@${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dm_mat_type aij -dof 5 > ex32_inode.out 2>&1;
	-@${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dm_mat_type aij -dof 5 -mat_no_inode > ex32.tmp 2>&1; \
	if (${DIFF} ex32_inode.out ex32.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex32_inode5, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex32.tmp; ${RM} -f ex32_inode.out
runex32_inode5_nd:
	-@${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dm_mat_type aij -dof 5 -pc_factor_mat_ordering_type nd > ex32_inode.out 2>&1;
	-@${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dm_mat_type aij -dof 5 -pc_factor_mat_ordering_type nd -mat_no_inode > ex32.tmp 2>&1; \
	if (${DIFF} ex32_inode.out ex32.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex32_inode5_nd, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex32.tmp; ${RM} -f ex32_inode.out
runex32_cholmod:
	-@${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dm_mat_type aij -pc_factor_mat_solver_package cholmod -ksp_monitor_short -pc_type cholesky -ksp_view > ex32.tmp 2>&1;\
	if (${DIFF} output/ex32_cholmod.out ex32.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex32_cholmod, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex32.tmp;
runex32_cholmod_seqsbaij:
	-@${MPIEXEC} -n 1 ./ex32 -ksp_monitor_short -dm_mat_type sbaij -pc_factor_mat_solver_package cholmod -ksp_monitor_short -pc_type cholesky -ksp_view > ex32.tmp 2>&1;\
	if (${DIFF} output/ex32_cholmod_sbaij.out ex32.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex32_cholmod_seqsbai, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex32.tmp;

runex38:
	-@${MPIEXEC} -n 8 ./ex38 -ksp_type fbcgs -ksp_rtol 1.e-6 -sub_ksp_type bcgs -sub_ksp_rtol 1.e-3 -pc_type bjacobi -ksp_converged_reason -n1 64 -n2 64 > ex38.tmp 2>&1;\
	if (${DIFF} output/ex38.out ex38.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex38_1, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex38.tmp

runex39:
	-@${MPIEXEC} -n 8 ./ex39 -ksp_type fbcgs -ksp_rtol 1.e-6 -sub_ksp_type bcgs -sub_ksp_rtol 1.e-3 -pc_type bjacobi -ksp_converged_reason -n1 32 -n2 32 -n3 32 > ex39.tmp 2>&1;\
	if (${DIFF} output/ex39.out ex39.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex39_1, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex39.tmp
runex39_2:
	-@${MPIEXEC} -n 8 ./ex39 -ksp_type fbcgsr -ksp_rtol 1.e-6 -sub_ksp_type bcgs -sub_ksp_rtol 1.e-3 -pc_type bjacobi -ksp_converged_reason -n1 32 -n2 32 -n3 32 > ex39.tmp 2>&1;\
	if (${DIFF} output/ex39.out ex39.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex39_2, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex39.tmp

runex40:
	-@${MPIEXEC} -n 6 ./ex40 -pc_type none  > ex40.tmp 2>&1;\
	if (${DIFF} output/ex40.out ex40.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex40_1, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex40.tmp
runex40_2:
	-@${MPIEXEC} -n 6 ./ex40 -pc_type lu -pc_factor_mat_solver_package elemental > ex40.tmp 2>&1;\
	if (${DIFF} output/ex40_2.out ex40.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex40_2, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex40.tmp
runex41:
	-@${MPIEXEC} -n 1 ./ex41  > ex41_1.tmp 2>&1;\
	   if (${DIFF} output/ex41_1.out ex41_1.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex41_1, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex41_1.tmp
runex41_2:
	-@${MPIEXEC} -n 2 ./ex41  > ex41_2.tmp 2>&1;\
	   if (${DIFF} output/ex41_2.out ex41_2.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex41_2, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex41_2.tmp
runex42:
	-@${MPIEXEC} -n 1 ./ex42 -ksp_type minres -pc_type none -ksp_converged_reason > ex42.tmp 2>&1;\
	if (${DIFF} output/ex42.out ex42.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex42_1, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex42.tmp
runex42_2:
	-@${MPIEXEC} -n 3 ./ex42 -ksp_type minres -pc_type none -ksp_converged_reason > ex42.tmp 2>&1;\
	if (${DIFF} output/ex42_2.out ex42.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex42_2, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex42.tmp

runex43:
	-@${MPIEXEC} -n 1 ./ex43 -f ${DATAFILESPATH}/matrices/cfd.2.10 -mat_type seqaijcusparse -pc_factor_mat_solver_package cusparse  -mat_cusparse_storage_format ell -vec_type cuda -pc_type ilu > ex43.tmp 2>&1;\
	if (${DIFF} output/ex43.out ex43.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex43, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex43.tmp

runex43_2:
	-@${MPIEXEC} -n 1 ./ex43 -f ${DATAFILESPATH}/matrices/shallow_water1 -mat_type seqaijcusparse  -pc_factor_mat_solver_package cusparse -mat_cusparse_storage_format hyb -vec_type cuda -ksp_type cg -pc_type icc > ex43_2.tmp 2>&1;\
	if (${DIFF} output/ex43_2.out ex43_2.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex43_2, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex43_2.tmp

runex43_3:
	-@${MPIEXEC} -n 1 ./ex43 -f ${DATAFILESPATH}/matrices/cfd.2.10 -mat_type seqaijcusparse  -pc_factor_mat_solver_package cusparse -mat_cusparse_storage_format csr -vec_type cuda -ksp_type bicg -pc_type ilu > ex43_3.tmp 2>&1;\
	if (${DIFF} output/ex43_3.out ex43_3.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex43_3, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex43_3.tmp

runex43_4:
	-@${MPIEXEC} -n 1 ./ex43 -f ${DATAFILESPATH}/matrices/cfd.2.10 -mat_type seqaijcusparse  -pc_factor_mat_solver_package cusparse -mat_cusparse_storage_format csr -vec_type cuda -ksp_type bicg -pc_type ilu -pc_factor_mat_ordering_type nd > ex43_4.tmp 2>&1;\
	if (${DIFF} output/ex43_4.out ex43_4.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex43_4, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex43_4.tmp

runex43_5:
	-@${MPIEXEC} -n 2 ./ex43 -f ${DATAFILESPATH}/matrices/shallow_water1 -mat_type mpiaijcusparse -mat_cusparse_mult_diag_storage_format hyb -pc_type none -vec_type cuda > ex43_5.tmp 2>&1;\
	if (${DIFF} output/ex43_5.out ex43_5.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex43_5, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex43_5.tmp

runex43_6:
	-@${MPIEXEC} -n 1 ./ex43 -f ${DATAFILESPATH}/matrices/shallow_water1 -mat_type seqaijcusp -pc_type none -vec_type seqcusp > ex43_6.tmp 2>&1;\
	if (${DIFF} output/ex43_6.out ex43_6.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex43_6, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex43_6.tmp

runex43_7:
	-@${MPIEXEC} -n 1 ./ex43 -f ${DATAFILESPATH}/matrices/shallow_water1 -mat_type seqaijcusp -mat_cusp_mult_storage_format ell -pc_type none -vec_type seqcusp > ex43_7.tmp 2>&1;\
	if (${DIFF} output/ex43_7.out ex43_7.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex43_7, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex43_7.tmp

runex43_8:
	-@${MPIEXEC} -n 2 ./ex43 -f ${DATAFILESPATH}/matrices/shallow_water1 -mat_type mpiaijcusp -pc_type none -vec_type mpicusp > ex43_8.tmp 2>&1;\
	if (${DIFF} output/ex43_8.out ex43_8.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex43_8, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex43_8.tmp


EX44RICH=-ksp_type richardson -ksp_max_it 1 -ksp_final_residual -pc_type sor
EX44RICHNONZ=${EX44RICH} -ksp_initial_guess_nonzero
runex44:
	-@for mt in aij baij dense; do \
	  case $$mt in \
	    aij|dense|sbaij) \
	      bss="1" \
	      ;; \
	    baij) \
	      bss="1 2 3 4 5 6 7 15" \
	      ;; \
	  esac; \
	  for bs in $$bss; do \
	    ${MPIEXEC} -n 1 ./ex44 ${EX44RICH} -mat_type $$mt -mat_block_size $$bs > ex44.tmp 2>&1;\
	    if (${DIFF} output/ex44_aij_zero.out ex44.tmp) then true; \
	       else printf "${PWD}\nPossible problem with ex44 -mat_type $$mt -mat_block_size $$bs, diffs above\n=========================================\n"; fi; \
	    ${MPIEXEC} -n 1 ./ex44 ${EX44RICHNONZ} -mat_type $$mt -mat_block_size $$bs > ex44.tmp 2>&1;\
	    if (${DIFF} output/ex44_aij_nonz.out ex44.tmp) then true; \
	       else printf "${PWD}\nPossible problem with ex44 -mat_type $$mt -mat_block_size $$bs -ksp_initial_guess_nonzero, diffs above\n=========================================\n"; fi; \
		  ${RM} ex44.tmp; \
	  done \
	done

runex45:
	-@${MPIEXEC} -n 1 ./ex45  > ex45.tmp 2>&1;\
	if (${DIFF} output/ex45_1.out ex45.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex45, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex45.tmp

runex46:
	-@${MPIEXEC} -n 1 ./ex46 > ex46.tmp 2>&1;\
	if (${DIFF} output/ex46_1.out ex46.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex46, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex46.tmp

runex47:
	-@${MPIEXEC} -n 1 ./ex47 -pc_type fieldsplit > ex47.tmp 2>&1;\
	if (${DIFF} output/ex47_1.out ex47.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex47, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex47.tmp

runex48:
	-@${MPIEXEC} -n 1 ./ex48 -ksp_monitor_short -ksp_converged_reason -ksp_type minres -pc_type jacobi -ksp_error_if_not_converged > ex48.tmp 2>&1;\
	if (${DIFF} output/ex48_1.out ex48.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex48, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex48.tmp

runex49:
	@for bs in 1 2 3 4 5 6 7 8 9 10 11 12; do \
           ${MPIEXEC} -n 1 ./ex49 -bs $$bs -pc_type cholesky  ;\
         done;
runex50:
	@for bs in 1 2 3 4 5 6 7; do \
           ${MPIEXEC} -n 1 ./ex50 -bs $$bs -pc_type pbjacobi  ;\
         done;
runex50_2:
	@for bs in 8 9 10 11 12 13 14 15; do \
           ${MPIEXEC} -n 1 ./ex50 -bs $$bs -pc_type ilu ;\
         done;

runex51:
	-@${MPIEXEC} -n 1 ./ex51 -reverse > ex51.tmp 2>&1;\
	if (${DIFF} output/ex51_1.out ex51.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex51, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex51.tmp

runex51_2:
	-@x="bad"; ${MPIEXEC} -n 1 ./ex51 -reverse -pc_type cholesky > ex51.tmp 2>&1;\
	if (${DIFF} output/ex51_1.out ex51.tmp > /dev/null 2>&1) then x='good'; fi; \
	if (${DIFF} output/ex51_2.out ex51.tmp > /dev/null 2>&1) then x='good'; fi; \
        if [ "$$x" = "bad" ]; then ${DIFF} output/ex51_1.out ex51.tmp ; ${DIFF} output/ex51_2.out ex51.tmp ; printf "${PWD}\nPossible problem with ex51_2, diffs above\n=========================================\n"; fi; \
        ${RM} -f ex51.tmp

runex52f:
	-@${MPIEXEC} -n 1 ./ex52f   > ex52f_1.tmp 2>&1; \
	   if (${DIFF} output/ex52f_1.out ex52f_1.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex52f_1, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex52f_1.tmp

runex53:
	-@${MPIEXEC} -n 2 ./ex53 -method 1 > ex53.tmp 2>&1;\
	if (${DIFF} output/ex53_1.out ex53.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex53, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex53.tmp
runex53_2:
	-@${MPIEXEC} -n 2 ./ex53 -method 2 > ex53.tmp 2>&1;\
	if (${DIFF} output/ex53_2.out ex53.tmp) then true; \
	   else printf "${PWD}\nPossible problem with ex53_2, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex53.tmp

runex54:
	-@${MPIEXEC} -n 1 ./ex54 -ksp_monitor_true_residual -ksp_max_it 10 -sys_view -ksp_converged_reason -ksp_view -ksp_lsqr_set_standard_error -ksp_lsqr_monitor > ex54_1.tmp 2>&1;\
           x="bad"; \
	   if (${DIFF} output/ex54_1.out ex54_1.tmp > /dev/null 2>&1) then x='good'; fi ;\
	   if (${DIFF} output/ex54_1_alt.out ex54_1.tmp > /dev/null 2>&1) then x='good'; fi; \
	   if [ "$$x" = "bad" ]; then ${DIFF} output/ex54_1.out ex54_1.tmp ; ${DIFF} output/ex54_1_alt.out ex54_1.tmp ; printf "${PWD}\nPossible problem with ex54_1, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex54_1.tmp

runex54_2:
	-@${MPIEXEC} -n 4 ./ex54 -ksp_monitor_true_residual -ksp_max_it 10 -sys_view -ksp_converged_reason -ksp_view -ksp_lsqr_set_standard_error -ksp_lsqr_monitor > ex54_2.tmp 2>&1;\
           x="bad"; \
	   if (${DIFF} output/ex54_2.out ex54_2.tmp > /dev/null 2>&1) then x='good'; fi ;\
	   if (${DIFF} output/ex54_2_alt.out ex54_2.tmp > /dev/null 2>&1) then x='good'; fi; \
	   if [ "$$x" = "bad" ]; then ${DIFF} output/ex54_2.out ex54_2.tmp ; ${DIFF} output/ex54_2_alt.out ex54_2.tmp ; printf "${PWD}\nPossible problem with ex54_2, diffs above\n=========================================\n"; fi; \
	   ${RM} -f ex54_2.tmp


TESTEXAMPLES_C		       = ex32.PETSc runex32_testset1 runex32_testset2 runex32_testset3 runex32_testset4 runex32_testset5 \
                                 runex32_aij_sbaij_icc runex32_aij_sbaij_icc_lev1 runex32_aij_sbaij_icc_lev10 runex32_aij_sbaij_cholesky printdot \
                                 runex32_inode2 runex32_inode2_nd runex32_inode3 runex32_inode3_nd runex32_inode4 runex32_inode4_nd \
                                 runex32_inode5 runex32_inode5_nd ex32.rm \
                                 ex38.PETSc runex38 ex38.rm ex39.PETSc runex39 runex39_2 ex39.rm ex41.PETSc runex41 runex41_2 ex41.rm \
                                 ex42.PETSc runex42 runex42_2 ex42.rm \
                                 ex44.PETSc runex44 ex44.rm ex45.PETSc runex45 ex45.rm ex47.PETSc runex47 ex47.rm ex48.PETSc runex48 ex48.rm printdot \
                                 ex50.PETSc runex50 runex50_2 ex50.rm \
                                 ex51.PETSc runex51 runex51_2 ex51.rm ex53.PETSc runex53 runex53_2 ex53.rm ex54.PETSc runex54 runex54_2 ex54.rm
TESTEXAMPLES_C_NOTSINGLE       = ex49.PETSc runex49 ex49.rm
TESTEXAMPLES_C_X	       = ex15.PETSc ex15.rm
TESTEXAMPLES_FORTRAN	       = ex12f.PETSc ex12f.rm ex52f.PETSc runex52f ex52f.rm

TESTEXAMPLES_13		       = ex18.PETSc ex18.rm ex5f.PETSc ex5f.rm
TESTEXAMPLES_ELEMENTAL         = ex40.PETSc runex40 runex40_2 ex40.rm
TESTEXAMPLES_VECCUDA_DATAFILESPATH = ex43.PETSc runex43 runex43_2 runex43_3 runex43_4 runex43_5 ex43.rm
TESTEXAMPLES_SUITESPARSE       = ex32.PETSc runex32_cholmod runex32_cholmod_seqsbaij ex32.rm
TESTEXAMPLES_CHOMBO            =
include ${PETSC_DIR}/lib/petsc/conf/test
